// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  PENDING
  REJECTED
  ACCEPTED
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  cellphone String   @unique
  role      Role
  createdAt DateTime @db.Timestamp()
  updatedAt DateTime @db.Timestamp()
  Team      Team[]

  @@map("users")
}

model Team {
  id        Int       @id @default(autoincrement())
  name      String
  badge     String
  foundedAt DateTime
  homeField String?
  city      String
  province  String
  userId    Int
  createdAt DateTime  @db.Timestamp()
  updatedAt DateTime  @db.Timestamp()
  user      User      @relation(fields: [userId], references: [id])
  Game      Game[]    @relation("homeTeam")
  GameAway  Game[]    @relation("awayTeam")
  Request   Request[] @relation("fromTeam")
  Requested Request[] @relation("receiverTeam")

  @@map("teams")
}

model Game {
  id         Int      @id @default(autoincrement())
  location   String
  homeTeamId Int
  home       Team     @relation(name: "homeTeam", fields: [homeTeamId], references: [id])
  awayTeamId Int
  away       Team     @relation(name: "awayTeam", fields: [awayTeamId], references: [id])
  gameDate   DateTime @db.Date
  gameTime   DateTime @db.Time()
  createdAt  DateTime @db.Timestamp()
  updatedAt  DateTime @db.Timestamp()
  Result     Result?

  @@unique([homeTeamId, awayTeamId, gameDate])
  @@map("games")
}

model Result {
  id            Int  @id @default(autoincrement())
  homeTeamGoals Int
  awayTeamGoals Int
  gameId        Int  @unique
  game          Game @relation(fields: [gameId], references: [id])

  @@map("results")
}

model Request {
  id             Int      @id @default(autoincrement())
  fromTeamId     Int
  from           Team     @relation(name: "fromTeam", fields: [fromTeamId], references: [id])
  receiverTeamId Int
  receiver       Team     @relation(name: "receiverTeam", fields: [receiverTeamId], references: [id])
  game_time      DateTime @db.Time
  game_date      DateTime @db.Date
  status         Status
  createdAt      DateTime @db.Timestamp()
}
